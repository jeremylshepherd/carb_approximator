{"version":3,"sources":["logo.svg","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","_ref","name","ounces","abv","carbCount","calories","react_default","a","createElement","className","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","caloriesFromAlcohol","beers","showHistory","convertOzToMils","bind","assertThisInitialized","handleInput","getAlcoholCalories","clearForm","toggleHistory","addToHistory","e","_e$target","target","value","setState","defineProperty","now","Date","toLocaleDateString","year","month","day","altName","concat","length","toConsumableArray","obj","push","beerString","JSON","stringify","localStorage","setItem","preventDefault","_this$state","mils","alcoholCalories","toFixed","split","join","getItem","parse","_this$state2","style","transform","map","b","onClick","type","placeholder","onChange","required","disabled","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eb3b981e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nfunction Card({ name, ounces, abv, carbCount, calories }) {\n  return (\n    <div className=\"card\">\n      <h2>{name}</h2>\n      <hr />\n      <div className=\"card-row\">\n        <span>Calories</span>\n        <span>Ounces</span>\n        <span>ABV</span>\n        <span>CARBS</span>\n      </div>\n      <div className=\"card-row\">\n        <span>{calories}</span>\n        <span>{ounces}</span>\n        <span>{abv}</span>\n        <span>{carbCount}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./components/Card\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      ounces: null,\n      abv: null,\n      calories: null,\n      carbCount: 0,\n      caloriesFromAlcohol: 0,\n      beers: [],\n      showHistory: false\n    };\n\n    this.convertOzToMils = this.convertOzToMils.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.getAlcoholCalories = this.getAlcoholCalories.bind(this);\n    this.clearForm = this.clearForm.bind(this);\n    this.toggleHistory = this.toggleHistory.bind(this);\n    this.addToHistory = this.addToHistory.bind(this);\n  }\n\n  convertOzToMils() {\n    return +this.state.ounces * 2957;\n  }\n\n  handleInput(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  addToHistory({ name, ounces, abv, carbCount, calories }) {\n    const now = new Date(Date.now()).toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n    const altName = `Unnamed: ${now}`;\n    name = name.length > 0 ? name : altName;\n    const beers = [...this.state.beers];\n    const obj = {\n      name,\n      ounces,\n      abv,\n      carbCount,\n      calories\n    };\n    beers.push(obj);\n    let beerString = JSON.stringify(beers);\n    localStorage.setItem(\"beers\", beerString);\n    this.setState({ beers: beers });\n  }\n\n  toggleHistory() {\n    this.setState({\n      showHistory: !this.state.showHistory\n    });\n  }\n\n  clearForm() {\n    this.setState({\n      name: \"\",\n      ounces: \"\",\n      abv: \"\",\n      calories: \"\"\n    });\n  }\n\n  /*Formula for grams of alcohol from volume is (8 x volume(ml) * ABV%)/1000\n    For example Miller Lite is 12oz 4.2%ABV:\n      The oz are converted to ml which equals 355\n      gets calulated as (8 * 355 * 4.2) / 1000 which equals 11.928\n      There 7 calories per gram of alcohol, so 83.496 calories from alcohol\n      Trying to keep math units as integers to minimize \n      float inaccuracy hence huge denominator on line 47\n  */\n  getAlcoholCalories(e) {\n    e.preventDefault();\n    const { name, ounces, calories } = this.state;\n    const mils = this.convertOzToMils();\n    const abv = +this.state.abv;\n    const noDecimalABV = abv\n      .toFixed(2)\n      .split(\".\")\n      .join(\"\");\n    const alcoholGrams = (8 * (mils * +noDecimalABV)) / 1000000;\n    const alcoholCalories = ((alcoholGrams * 7) / 10).toFixed(2);\n    const carbCount = ((+calories - alcoholCalories) / 4).toFixed(1);\n    this.setState({ caloriesFromAlcohol: alcoholCalories });\n    this.setState({ carbCount: carbCount });\n    this.addToHistory({ abv, calories, carbCount, name, ounces });\n    this.clearForm();\n  }\n\n  componentDidMount() {\n    const beers = localStorage.getItem(\"beers\");\n    if (beers) {\n      this.setState({\n        beers: JSON.parse(beers)\n      });\n    }\n  }\n\n  render() {\n    const {\n      name,\n      ounces,\n      abv,\n      calories,\n      carbCount,\n      caloriesFromAlcohol,\n      beers,\n      showHistory\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <div\n          style={{ transform: showHistory ? \"scale(1, 1)\" : \"scale(0,0)\" }}\n          className=\"history\"\n        >\n          {beers.length > 0 ? beers.map(b => Card(b)) : <h1>No beers here!</h1>}\n        </div>\n        <i onClick={this.toggleHistory} className=\"fa fa-history\" />\n        <div className=\"container\">\n          <div className=\"centered-text\">\n            <h1>CarbApproximator</h1>\n            <h2 className=\"sub-heading\">for Craft Beer</h2>\n          </div>\n          <form>\n            <input\n              className=\"form-elements\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Beer name\"\n              value={name}\n              onChange={this.handleInput}\n            />\n            <input\n              className=\"form-elements\"\n              name=\"ounces\"\n              type=\"number\"\n              placeholder=\"How many ounces\"\n              value={ounces}\n              onChange={this.handleInput}\n              required\n            />\n            <input\n              className=\"form-elements\"\n              name=\"abv\"\n              type=\"number\"\n              placeholder=\"ABV%\"\n              value={abv}\n              onChange={this.handleInput}\n              required\n            />\n            <input\n              className=\"form-elements\"\n              name=\"calories\"\n              type=\"number\"\n              placeholder=\"Listed calories\"\n              value={calories}\n              onChange={this.handleInput}\n              required\n            />\n            <button\n              className=\"form-elements button\"\n              onClick={this.getAlcoholCalories}\n              disabled={!ounces || !abv || !calories ? true : false}\n            >\n              Get Estimate\n            </button>\n          </form>\n          <div>\n            <h2>{`Calories from Alcohol: ${caloriesFromAlcohol} kcal`}</h2>\n            <h2>{`Estimated Carb Count: ${carbCount} g`}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}